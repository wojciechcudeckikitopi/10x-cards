name: Pull Request Workflow

on:
  pull_request:
    branches: ["master"]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  status-comment:
    name: PR Status Comment
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check previous job statuses
        id: check-status
        run: |
          if [[ "${{ needs.unit-test.result }}" == "success" && "${{ needs.e2e-test.result }}" == "success" ]]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        if: steps.check-status.outputs.success == 'true'
        uses: actions/checkout@v4

      - name: Download artifacts
        if: steps.check-status.outputs.success == 'true'
        uses: actions/download-artifact@v4
        with:
          pattern: "*-*"
          path: artifacts

      - name: Create status comment
        if: steps.check-status.outputs.success == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { issue, repo } = context;
            await github.rest.issues.createComment({
              issue_number: issue.number,
              owner: repo.owner,
              repo: repo.repo,
              body: `✅ All tests passed successfully!

              - Unit tests: ✅
              - E2E tests: ✅

              You can download test reports from the workflow artifacts.`
            }); 